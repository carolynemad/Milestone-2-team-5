[{"C:\\Users\\user\\Documents\\GitHub\\Milestone-2-team-5\\src\\index.js":"1","C:\\Users\\user\\Documents\\GitHub\\Milestone-2-team-5\\src\\App.js":"2","C:\\Users\\user\\Documents\\GitHub\\Milestone-2-team-5\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Documents\\GitHub\\Milestone-2-team-5\\src\\components\\Login.js":"4","C:\\Users\\user\\Documents\\GitHub\\Milestone-2-team-5\\src\\components\\AC\\TA.js":"5","C:\\Users\\user\\Documents\\GitHub\\Milestone-2-team-5\\src\\components\\HR\\AddMember.js":"6","C:\\Users\\user\\Documents\\GitHub\\Milestone-2-team-5\\src\\components\\HR\\HR.js":"7","C:\\Users\\user\\Documents\\GitHub\\Milestone-2-team-5\\src\\components\\HR\\Attendance.js":"8","C:\\Users\\user\\Documents\\GitHub\\Milestone-2-team-5\\src\\components\\HR\\Notifications.js":"9","C:\\Users\\user\\Documents\\GitHub\\Milestone-2-team-5\\src\\components\\HR\\ResetPassword.js":"10","C:\\Users\\user\\Documents\\GitHub\\Milestone-2-team-5\\src\\components\\HR\\UpdatePassword.js":"11"},{"size":517,"mtime":1609373683398,"results":"12","hashOfConfig":"13"},{"size":639,"mtime":1609374675518,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1609373683398,"results":"15","hashOfConfig":"13"},{"size":2873,"mtime":1609373683257,"results":"16","hashOfConfig":"13"},{"size":8054,"mtime":1609373683257,"results":"17","hashOfConfig":"13"},{"size":7133,"mtime":1609373683257,"results":"18","hashOfConfig":"13"},{"size":10848,"mtime":1609373683257,"results":"19","hashOfConfig":"13"},{"size":7618,"mtime":1609374280181,"results":"20","hashOfConfig":"13"},{"size":4507,"mtime":1609374420567,"results":"21","hashOfConfig":"13"},{"size":4652,"mtime":1609374465237,"results":"22","hashOfConfig":"13"},{"size":4655,"mtime":1609374324541,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h2gkaa",{"filePath":"26","messages":"27","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Documents\\GitHub\\Milestone-2-team-5\\src\\index.js",[],"C:\\Users\\user\\Documents\\GitHub\\Milestone-2-team-5\\src\\App.js",["51","52","53","54","55","56","57","58"],"C:\\Users\\user\\Documents\\GitHub\\Milestone-2-team-5\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Documents\\GitHub\\Milestone-2-team-5\\src\\components\\Login.js",["59","60"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Typography } from '@material-ui/core'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    loginUsername: {\r\n        '& > *': {\r\n          margin: theme.spacing(1),\r\n          width: '25ch',\r\n        },\r\n      },\r\n      buttonStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        '& > *': {\r\n          margin: theme.spacing(1),\r\n        },\r\n      },\r\n      textStyle: {\r\n        fontSize: '2vw',\r\n    textAlign: 'center',\r\n    fontFamily: 'Helvetica',\r\n    color: 'black',\r\n    fontWeight:'bold',\r\n      },\r\n      rowStyle: {\r\n        justifyContent: 'center',\r\n    alignItems: 'center',\r\n      }\r\n  }))\r\n\r\n  function changeBackgroundIn(e) {\r\n    e.target.style.color = '#306073'\r\n  }\r\n  function changeBackgroundOut(e) {\r\n    e.target.style.color = 'Black'\r\n  }\r\n  \r\nexport default function Login() {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div\r\n        style={{\r\n          // backgroundImage:style=  `url(\"GUC1.jpeg\")` ,\r\n          width: '100vw',\r\n          height:'50vw',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          display: 'flex',\r\n        }}\r\n        \r\n      >\r\n        <table>\r\n          <tr className={classes.rowStyle}>\r\n            <img style = {{width:'15vw',height:'5vw',justifyContent: 'center',\r\n          alignItems: 'center',}} src = \"guc logo.jpeg\"/>\r\n          </tr>\r\n          <tr>\r\n          <hr style={{width:\"15vw\"}}/>\r\n        {/* <Typography className={classes.textStyle}>Login</Typography> */}\r\n        \r\n          </tr>\r\n          <tr>\r\n            <br/>\r\n          </tr>\r\n          <tr>\r\n          <TextField style ={{width:\"15vw\"}}  id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" size=\"small\"/>\r\n          </tr>\r\n<tr>\r\n  <br/>\r\n</tr>\r\n        <tr>\r\n        \r\n    \r\n    <TextField\r\n          style ={{width:\"15vw\"}}\r\n          id=\"outlined-password-input\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          variant=\"outlined\"\r\n          color = \"white\"\r\n          size=\"small\"\r\n\r\n        />\r\n        </tr>\r\n        <tr>\r\n        <br/>\r\n        </tr>\r\n        <tr style={{ justifyContent: 'center',\r\n          alignItems: 'center',\r\n          display: 'flex'}}>\r\n         \r\n        <ButtonGroup className={classes.buttonStyle}  \r\n         aria-label=\"contained primary button group\"\r\n         onMouseOver={changeBackgroundIn}\r\n         onMouseOut={changeBackgroundOut}>\r\n        <Button>Login</Button>\r\n        \r\n      </ButtonGroup>\r\n        </tr>\r\n        </table>\r\n\r\n     \r\n      \r\n     \r\n      </div>\r\n    )\r\n}\r\n",["61","62"],"C:\\Users\\user\\Documents\\GitHub\\Milestone-2-team-5\\src\\components\\AC\\TA.js",["63","64","65","66","67","68","69"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport ViewHeadlineOutlinedIcon from '@material-ui/icons/ViewHeadlineOutlined';\r\nimport ScheduleOutlinedIcon from '@material-ui/icons/ScheduleOutlined';\r\nimport NotificationsActiveOutlinedIcon from '@material-ui/icons/NotificationsActiveOutlined';\r\nimport AllInboxOutlinedIcon from '@material-ui/icons/AllInboxOutlined';\r\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\r\nimport PermIdentityOutlinedIcon from '@material-ui/icons/PermIdentityOutlined';\r\nimport UpdateOutlinedIcon from '@material-ui/icons/UpdateOutlined';\r\nimport LockOpenOutlinedIcon from '@material-ui/icons/LockOpenOutlined';\r\nimport ListAltOutlinedIcon from '@material-ui/icons/ListAltOutlined';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n    root1: {\r\n      display: 'flex',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    small: {\r\n      width: theme.spacing(3),\r\n      height: theme.spacing(3),\r\n    },\r\n    large: {\r\n      width: theme.spacing(7),\r\n      height: theme.spacing(7),\r\n    },\r\n  }));  \r\n\r\n  function changeBackgroundIn(e) {\r\n    e.target.style.color = '#306073'\r\n  }\r\n  function changeBackgroundOut(e) {\r\n    e.target.style.color = 'Black'\r\n  }\r\nexport default function ACpage() {\r\n    \r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n  \r\n    const handleDrawerOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleDrawerClose = () => {\r\n      setOpen(false);\r\n    };\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n              [classes.appBarShift]: open,\r\n            })}\r\n          >\r\n            <Toolbar>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={handleDrawerOpen}\r\n                edge=\"start\"\r\n                className={clsx(classes.menuButton, {\r\n                  [classes.hide]: open,\r\n                })}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n\r\n              {/* <Avatar src=\"ashry.jpeg\" />  */}\r\n             \r\n              <Typography variant=\"h6\" noWrap>\r\n                Mohamad Ashry\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            className={clsx(classes.drawer, {\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open,\r\n            })}\r\n            classes={{\r\n              paper: clsx({\r\n                [classes.drawerOpen]: open,\r\n                [classes.drawerClose]: !open,\r\n              }),\r\n            }}\r\n          >\r\n            <div className={classes.toolbar}>\r\n              <IconButton onClick={handleDrawerClose}>\r\n                {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n              </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n              {['Schedule', 'Send Request', 'View My Requests', 'Notifications' , 'Mail'].map((text, index) => (\r\n                <ListItem button key={text}>\r\n                  {/* <ListItemIcon>{index % 2 === 0 ? <ViewHeadlineOutlinedIcon /> : <MailIcon />}</ListItemIcon> */}\r\n                  <ListItemIcon>\r\n                 {index === 0 && <ScheduleOutlinedIcon />}\r\n                 {index === 1 && <SendOutlinedIcon />}\r\n                 {index === 2 && <AllInboxOutlinedIcon />}\r\n                 {index === 3 && <NotificationsActiveOutlinedIcon />}\r\n                 {index === 4 && <MailIcon />}\r\n\r\n                 </ListItemIcon>\r\n                  <ListItemText primary={text} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n            <Divider />\r\n            \r\n            <List>\r\n              {['My Profile', 'Update My Profile', 'Reset My Password' , 'Attendance'].map((text, index) => (\r\n                <ListItem button key={text}>\r\n                  <ListItemIcon>\r\n                 {index === 0 && <PermIdentityOutlinedIcon />}\r\n                 {index === 1 && <UpdateOutlinedIcon />}\r\n                 {index === 2 && <LockOpenOutlinedIcon />}\r\n                 {index === 3 && <ListAltOutlinedIcon />}\r\n\r\n                 </ListItemIcon>\r\n                  <ListItemText primary={text} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n            <Divider/>\r\n            <List>\r\n              {['Logout'].map((text, index) => (\r\n                <ListItem button key={text}>\r\n                  <ListItemIcon>\r\n                 {index === 0 && <ExitToAppOutlinedIcon />}\r\n                 \r\n\r\n                 </ListItemIcon>\r\n                  <ListItemText primary={text} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n\r\n\r\n            \r\n          </Drawer>\r\n          <main className={classes.content}>\r\n            <div className={classes.toolbar} />\r\n            <Typography>\r\n            \r\n            </Typography>\r\n        \r\n          </main>\r\n        </div>\r\n      );\r\n    }\r\n","C:\\Users\\user\\Documents\\GitHub\\Milestone-2-team-5\\src\\components\\HR\\AddMember.js",["70"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Typography } from '@material-ui/core'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '15vw ',\r\n      },\r\n    },\r\n    root2: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '31.35vw ',\r\n      },\r\n    },\r\n  \r\n    titleStyle: {\r\n        fontSize: '2vw',\r\n        textAlign: 'center',\r\n        fontFamily: 'Helvetica',\r\n        color: 'black',\r\n        fontWeight:'bold',\r\n  \r\n    },\r\n \r\n \r\n    tableStyle: {\r\n      width: '28vw',\r\n      margin: '2vw',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      // display:'flex'\r\n    },\r\n  \r\n    buttonStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      \r\n        '& > *': {\r\n          margin: theme.spacing(0.75),\r\n        },\r\n      },\r\n    rowStyle: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    colStyle: {\r\n      width: '50vw',\r\n    },\r\n    root3: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        width:'31.35vw',\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n  }))\r\n\r\nfunction changeBackgroundIn(e) {\r\n    e.target.style.color = '#5D9EA6'\r\n  }\r\n  function changeBackgroundOut(e) {\r\n    e.target.style.color = 'Black'\r\n  }\r\n  \r\nexport default function AddMember() {\r\n    const classes = useStyles();\r\n  const [age, setAge] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n    return (\r\n        <div\r\n        style={{\r\n          background: '#f6f6f6',\r\n          width: '100vw',\r\n          height:'50vw',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          display: 'flex',\r\n        }}\r\n      >\r\n        \r\n        <table className={classes.tableStyle}>\r\n          <tr>\r\n            <Typography className={classes.titleStyle}>Add New Member</Typography>\r\n  \r\n  \r\n            <br></br>\r\n          </tr>\r\n          <tr>\r\n          <hr style={{width:\"28vw\"}}/>\r\n            <br></br>\r\n          </tr>\r\n          <tr className={classes.rowStyle}>\r\n            <table>\r\n              <tr>\r\n                <table>\r\n                  <td>\r\n                    <form className={classes.root} noValidate autoComplete=\"off\">\r\n                      <TextField\r\n                        id=\"outlined-basic\"\r\n                        label=\"First Name\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                      />\r\n                    </form>\r\n                  </td>\r\n                  <td>\r\n                    <form className={classes.root} noValidate autoComplete=\"off\">\r\n                      <TextField\r\n                        id=\"outlined-basic\"\r\n                        label=\"Last Name\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                      />\r\n                    </form>\r\n                  </td>\r\n                </table>\r\n              </tr>\r\n           <tr>\r\n           <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Gender</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={age}\r\n          onChange={handleChange}\r\n          label=\"Gender\"\r\n        >\r\n          <MenuItem value=\"\">\r\n            \r\n          </MenuItem>\r\n          <MenuItem value={10}>Male</MenuItem>\r\n          <MenuItem value={20}>Female</MenuItem>\r\n          <MenuItem value={30}>Other</MenuItem>\r\n\r\n          \r\n        </Select>\r\n      </FormControl>\r\n           </tr>\r\n           <tr>\r\n           <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Member Type</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={age}\r\n          onChange={handleChange}\r\n          label=\"Member Type\"\r\n        >\r\n          <MenuItem value=\"\">\r\n            \r\n          </MenuItem>\r\n          <MenuItem value={10}>Academic</MenuItem>\r\n          <MenuItem value={20}>HR</MenuItem>\r\n          \r\n\r\n          \r\n        </Select>\r\n      </FormControl>\r\n           </tr>\r\n              <tr>\r\n                <td>\r\n                  <form className={classes.root2} noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                      id=\"outlined-basic\"\r\n                      label=\"Email Address\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                    />\r\n                  </form>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <form className={classes.root2} noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                      id=\"outlined-basic\"\r\n                      label=\"Office Location\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                    />\r\n                  </form>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n               \r\n              </tr>\r\n              <tr><div style={{justifyContent: 'center',\r\n          alignItems: 'center',\r\n          display: 'flex',}}>\r\n                <br/>\r\n                <Button\r\n                  className={classes.buttonStyle}\r\n                  onMouseOver={changeBackgroundIn}\r\n                  onMouseOut={changeBackgroundOut}\r\n                  onClick={handleClick}\r\n                  variant=\"contained\"\r\n                >\r\n                  Add Member\r\n                </Button>\r\n                <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"success\">\r\n          Member Added.\r\n          </Alert>\r\n        </Snackbar>\r\n             </div> </tr>\r\n            </table>\r\n          </tr>\r\n          \r\n       \r\n        </table>\r\n        \r\n      </div>\r\n    )\r\n}\r\n","C:\\Users\\user\\Documents\\GitHub\\Milestone-2-team-5\\src\\components\\HR\\HR.js",["71","72","73"],"import React  from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport ViewHeadlineOutlinedIcon from '@material-ui/icons/ViewHeadlineOutlined';\r\nimport ScheduleOutlinedIcon from '@material-ui/icons/ScheduleOutlined';\r\nimport NotificationsActiveOutlinedIcon from '@material-ui/icons/NotificationsActiveOutlined';\r\nimport AllInboxOutlinedIcon from '@material-ui/icons/AllInboxOutlined';\r\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\r\nimport PermIdentityOutlinedIcon from '@material-ui/icons/PermIdentityOutlined';\r\nimport UpdateOutlinedIcon from '@material-ui/icons/UpdateOutlined';\r\nimport LockOpenOutlinedIcon from '@material-ui/icons/LockOpenOutlined';\r\nimport ListAltOutlinedIcon from '@material-ui/icons/ListAltOutlined';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\n\r\n\r\nconst drawerWidth = 290;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(20),\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      display: 'flex',\r\n\r\n    },\r\n  }));  \r\n\r\nexport default function ACpage() {\r\n    \r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n  \r\n    const handleDrawerOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleDrawerClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n              [classes.appBarShift]: open,\r\n            })}\r\n          >\r\n            <Toolbar>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={handleDrawerOpen}\r\n                edge=\"start\"\r\n                className={clsx(classes.menuButton, {\r\n                  [classes.hide]: open,\r\n                })}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" noWrap>\r\n                Heba El Mougy\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            className={clsx(classes.drawer, {\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open,\r\n            })}\r\n            classes={{\r\n              paper: clsx({\r\n                [classes.drawerOpen]: open,\r\n                [classes.drawerClose]: !open,\r\n              }),\r\n            }}\r\n          >\r\n            <div className={classes.toolbar}>\r\n              <IconButton onClick={handleDrawerClose}>\r\n                {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n              </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n              {['Schedule', 'Notifications'].map((text, index) => (\r\n                <ListItem button key={text}>\r\n                  {/* <ListItemIcon>{index % 2 === 0 ? <ViewHeadlineOutlinedIcon /> : <MailIcon />}</ListItemIcon> */}\r\n                  <ListItemIcon>\r\n                 {index === 0 && <ScheduleOutlinedIcon />}\r\n                 {index === 1 && <SendOutlinedIcon />}\r\n                 {index === 2 && <AllInboxOutlinedIcon />}\r\n                 {index === 3 && <NotificationsActiveOutlinedIcon />}\r\n                 </ListItemIcon>\r\n                  <ListItemText primary={text} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n              {['My Profile', 'Update My Profile', 'Reset My Password' , 'Attendance'].map((text, index) => (\r\n                <ListItem button key={text}>\r\n                  <ListItemIcon>\r\n                 {index === 0 && <PermIdentityOutlinedIcon />}\r\n                 {index === 1 && <UpdateOutlinedIcon />}\r\n                 {index === 2 && <LockOpenOutlinedIcon />}\r\n                 {index === 3 && <ListAltOutlinedIcon />}\r\n\r\n                 </ListItemIcon>\r\n                  <ListItemText primary={text} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n              {['Add Member', 'Remove Member' , 'Update Member' , 'View Member'].map((text, index) => (\r\n                <ListItem button key={text}>\r\n                  <ListItemIcon>\r\n                 {index === 0 && <AddIcon />}\r\n                 {index === 1 && <RemoveIcon />}\r\n                 {index === 2 && <SystemUpdateAltIcon />}\r\n                 {index === 3 && <ViewListIcon />}\r\n\r\n\r\n\r\n                 </ListItemIcon>\r\n                  <ListItemText primary={text} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n              {['Add Faculty', 'Remove Faculty' , 'Update Faculty'].map((text, index) => (\r\n                <ListItem button key={text}>\r\n                  <ListItemIcon>\r\n                 {index === 0 && <AddIcon />}\r\n                 {index === 1 && <RemoveIcon />}\r\n                 {index === 2 && <SystemUpdateAltIcon />}\r\n\r\n                 \r\n\r\n                 </ListItemIcon>\r\n                  <ListItemText primary={text} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n              {['Add Department', 'Remove Department' , 'Update Department'].map((text, index) => (\r\n                <ListItem button key={text}>\r\n                  <ListItemIcon>\r\n                 {index === 0 && <AddIcon />}\r\n                 {index === 1 && <RemoveIcon />}\r\n                 {index === 2 && <SystemUpdateAltIcon />}\r\n\r\n                 \r\n\r\n                 </ListItemIcon>\r\n                  <ListItemText primary={text} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n              {['Add Location', 'Remove Location' , 'Update Location'].map((text, index) => (\r\n                <ListItem button key={text}>\r\n                  <ListItemIcon>\r\n                 {index === 0 && <AddIcon />}\r\n                 {index === 1 && <RemoveIcon />}\r\n                 {index === 2 && <SystemUpdateAltIcon />}\r\n\r\n                 \r\n\r\n                 </ListItemIcon>\r\n                  <ListItemText primary={text} />\r\n                </ListItem>\r\n              ))}\r\n            </List> \r\n            <Divider />\r\n            <List>\r\n              {['Add Course', 'Remove Course' , 'Update Course'].map((text, index) => (\r\n                <ListItem button key={text}>\r\n                  <ListItemIcon>\r\n                 {index === 0 && <AddIcon />}\r\n                 {index === 1 && <RemoveIcon />}\r\n                 {index === 2 && <SystemUpdateAltIcon />}\r\n\r\n                 \r\n\r\n                 </ListItemIcon>\r\n                  <ListItemText primary={text} />\r\n                </ListItem>\r\n              ))}\r\n            </List> \r\n            <Divider />\r\n\r\n            <List>\r\n              {['Missing SignIn / SignOut'].map((text, index) => (\r\n                <ListItem button key={text}>\r\n                  <ListItemIcon>\r\n                 {index === 0 && <MeetingRoomIcon />}\r\n                \r\n\r\n                 \r\n\r\n                 </ListItemIcon>\r\n                  <ListItemText primary={text} />\r\n                </ListItem>\r\n              ))}\r\n            </List> \r\n            <Divider/>\r\n            <List>\r\n              {['Logout'].map((text, index) => (\r\n                <ListItem button key={text}>\r\n                  <ListItemIcon>\r\n                 {index === 0 && <ExitToAppOutlinedIcon />}\r\n                 \r\n\r\n                 </ListItemIcon>\r\n                  <ListItemText primary={text} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Drawer>\r\n          <main className={classes.content}>\r\n            <div className={classes.toolbar} />\r\n         \r\n          \r\n          </main>\r\n        </div>\r\n      );\r\n    }\r\n","C:\\Users\\user\\Documents\\GitHub\\Milestone-2-team-5\\src\\components\\HR\\Attendance.js",["74","75","76"],"C:\\Users\\user\\Documents\\GitHub\\Milestone-2-team-5\\src\\components\\HR\\Notifications.js",["77","78"],"C:\\Users\\user\\Documents\\GitHub\\Milestone-2-team-5\\src\\components\\HR\\ResetPassword.js",["79","80"],"C:\\Users\\user\\Documents\\GitHub\\Milestone-2-team-5\\src\\components\\HR\\UpdatePassword.js",["81","82"],{"ruleId":"83","severity":1,"message":"84","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"87","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":13},{"ruleId":"83","severity":1,"message":"88","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":10},{"ruleId":"83","severity":1,"message":"89","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":17},{"ruleId":"83","severity":1,"message":"90","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":21},{"ruleId":"83","severity":1,"message":"91","line":7,"column":8,"nodeType":"85","messageId":"86","endLine":7,"endColumn":18},{"ruleId":"83","severity":1,"message":"92","line":8,"column":8,"nodeType":"85","messageId":"86","endLine":8,"endColumn":21},{"ruleId":"83","severity":1,"message":"93","line":9,"column":8,"nodeType":"85","messageId":"86","endLine":9,"endColumn":22},{"ruleId":"83","severity":1,"message":"94","line":3,"column":10,"nodeType":"85","messageId":"86","endLine":3,"endColumn":20},{"ruleId":"95","severity":1,"message":"96","line":62,"column":13,"nodeType":"97","endLine":63,"endColumn":58},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"83","severity":1,"message":"102","line":18,"column":8,"nodeType":"85","messageId":"86","endLine":18,"endColumn":17},{"ruleId":"83","severity":1,"message":"103","line":20,"column":8,"nodeType":"85","messageId":"86","endLine":20,"endColumn":32},{"ruleId":"83","severity":1,"message":"104","line":29,"column":8,"nodeType":"85","messageId":"86","endLine":29,"endColumn":14},{"ruleId":"83","severity":1,"message":"105","line":30,"column":8,"nodeType":"85","messageId":"86","endLine":30,"endColumn":19},{"ruleId":"83","severity":1,"message":"106","line":32,"column":8,"nodeType":"85","messageId":"86","endLine":32,"endColumn":14},{"ruleId":"83","severity":1,"message":"107","line":113,"column":12,"nodeType":"85","messageId":"86","endLine":113,"endColumn":30},{"ruleId":"83","severity":1,"message":"108","line":116,"column":12,"nodeType":"85","messageId":"86","endLine":116,"endColumn":31},{"ruleId":"83","severity":1,"message":"109","line":10,"column":8,"nodeType":"85","messageId":"86","endLine":10,"endColumn":22},{"ruleId":"83","severity":1,"message":"102","line":18,"column":8,"nodeType":"85","messageId":"86","endLine":18,"endColumn":17},{"ruleId":"83","severity":1,"message":"110","line":19,"column":8,"nodeType":"85","messageId":"86","endLine":19,"endColumn":16},{"ruleId":"83","severity":1,"message":"103","line":20,"column":8,"nodeType":"85","messageId":"86","endLine":20,"endColumn":32},{"ruleId":"83","severity":1,"message":"111","line":129,"column":10,"nodeType":"85","messageId":"86","endLine":129,"endColumn":15},{"ruleId":"83","severity":1,"message":"107","line":197,"column":10,"nodeType":"85","messageId":"86","endLine":197,"endColumn":28},{"ruleId":"83","severity":1,"message":"108","line":200,"column":12,"nodeType":"85","messageId":"86","endLine":200,"endColumn":31},{"ruleId":"83","severity":1,"message":"107","line":74,"column":10,"nodeType":"85","messageId":"86","endLine":74,"endColumn":28},{"ruleId":"83","severity":1,"message":"108","line":77,"column":12,"nodeType":"85","messageId":"86","endLine":77,"endColumn":31},{"ruleId":"83","severity":1,"message":"112","line":87,"column":10,"nodeType":"85","messageId":"86","endLine":87,"endColumn":18},{"ruleId":"83","severity":1,"message":"113","line":89,"column":9,"nodeType":"85","messageId":"86","endLine":89,"endColumn":21},{"ruleId":"83","severity":1,"message":"112","line":87,"column":10,"nodeType":"85","messageId":"86","endLine":87,"endColumn":18},{"ruleId":"83","severity":1,"message":"113","line":89,"column":9,"nodeType":"85","messageId":"86","endLine":89,"endColumn":21},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'TA' is defined but never used.","'AddMember' is defined but never used.","'Notifications' is defined but never used.","'Attendance' is defined but never used.","'ResetPassword' is defined but never used.","'UpdatePassword' is defined but never used.","'Typography' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["114"],"no-negated-in-lhs",["115"],"'InboxIcon' is defined but never used.","'ViewHeadlineOutlinedIcon' is defined but never used.","'Button' is defined but never used.","'ButtonGroup' is defined but never used.","'Avatar' is defined but never used.","'changeBackgroundIn' is defined but never used.","'changeBackgroundOut' is defined but never used.","'FormHelperText' is defined but never used.","'MailIcon' is defined but never used.","'Alert' is defined but never used.","'password' is assigned a value but never used.","'handleChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]